apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group=POM_GROUP_ID
version=POM_VERSION

def siteUrl = 'https://github.com/takuji31/Dagger2Android'
bintray {
    user = BINTRAY_USER
    key = BINTRAY_API_KEY
//    dryRun = true
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'Dagger2Android'
        userOrg = BINTRAY_USER
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/takuji31/Dagger2Android.git'
        issueTrackerUrl = 'https://github.com/takuji31/Dagger2Android/issues'
        publicDownloadNumbers = true

        version {
            name = POM_VERSION
            desc = 'Dagger2Android initial release'
            vcsTag = GITHUB_TAG
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'jar'
                name 'Dagger2Android'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'takuji31'
                        name 'Takuji Nishibayashi'
                        email 'takuji31+koreferene@gmail.com'
                    }
                }
                scm {
                    connection 'https://github.com/takuji31/Dagger2Android.git'
                    developerConnection 'https://github.com/takuji31/Dagger2Android.git'
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from '../README.md'
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}